{"ast":null,"code":"/*\r\n Language: G-code (ISO 6983)\r\n Contributors: Adam Joseph Cook <adam.joseph.cook@gmail.com>\r\n Description: G-code syntax highlighter for Fanuc and other common CNC machine tool controls.\r\n Website: https://www.sis.se/api/document/preview/911952/\r\n Category: hardware\r\n */\n\nfunction gcode(hljs) {\n  const regex = hljs.regex;\n  const GCODE_KEYWORDS = {\n    $pattern: /[A-Z]+|%/,\n    keyword: [\n    // conditions\n    'THEN', 'ELSE', 'ENDIF', 'IF',\n    // controls\n    'GOTO', 'DO', 'WHILE', 'WH', 'END', 'CALL',\n    // scoping\n    'SUB', 'ENDSUB',\n    // comparisons\n    'EQ', 'NE', 'LT', 'GT', 'LE', 'GE', 'AND', 'OR', 'XOR',\n    // start/end of program\n    '%'],\n    built_in: ['ATAN', 'ABS', 'ACOS', 'ASIN', 'COS', 'EXP', 'FIX', 'FUP', 'ROUND', 'LN', 'SIN', 'SQRT', 'TAN', 'EXISTS']\n  };\n\n  // TODO: post v12 lets use look-behind, until then \\b and a callback filter will be used\n  // const LETTER_BOUNDARY_RE = /(?<![A-Z])/;\n  const LETTER_BOUNDARY_RE = /\\b/;\n  function LETTER_BOUNDARY_CALLBACK(matchdata, response) {\n    if (matchdata.index === 0) {\n      return;\n    }\n    const charBeforeMatch = matchdata.input[matchdata.index - 1];\n    if (charBeforeMatch >= '0' && charBeforeMatch <= '9') {\n      return;\n    }\n    if (charBeforeMatch === '_') {\n      return;\n    }\n    response.ignoreMatch();\n  }\n  const NUMBER_RE = /[+-]?((\\.\\d+)|(\\d+)(\\.\\d*)?)/;\n  const GENERAL_MISC_FUNCTION_RE = /[GM]\\s*\\d+(\\.\\d+)?/;\n  const TOOLS_RE = /T\\s*\\d+/;\n  const SUBROUTINE_RE = /O\\s*\\d+/;\n  const SUBROUTINE_NAMED_RE = /O<.+>/;\n  const AXES_RE = /[ABCUVWXYZ]\\s*/;\n  const PARAMETERS_RE = /[FHIJKPQRS]\\s*/;\n  const GCODE_CODE = [\n  // comments\n  hljs.COMMENT(/\\(/, /\\)/), hljs.COMMENT(/;/, /$/), hljs.APOS_STRING_MODE, hljs.QUOTE_STRING_MODE, hljs.C_NUMBER_MODE,\n  // gcodes\n  {\n    scope: 'title.function',\n    variants: [\n    // G General functions: G0, G5.1, G5.2, …\n    // M Misc functions: M0, M55.6, M199, …\n    {\n      match: regex.concat(LETTER_BOUNDARY_RE, GENERAL_MISC_FUNCTION_RE)\n    }, {\n      begin: GENERAL_MISC_FUNCTION_RE,\n      'on:begin': LETTER_BOUNDARY_CALLBACK\n    },\n    // T Tools\n    {\n      match: regex.concat(LETTER_BOUNDARY_RE, TOOLS_RE)\n    }, {\n      begin: TOOLS_RE,\n      'on:begin': LETTER_BOUNDARY_CALLBACK\n    }]\n  }, {\n    scope: 'symbol',\n    variants: [\n    // O Subroutine ID: O100, O110, …\n    {\n      match: regex.concat(LETTER_BOUNDARY_RE, SUBROUTINE_RE)\n    }, {\n      begin: SUBROUTINE_RE,\n      'on:begin': LETTER_BOUNDARY_CALLBACK\n    },\n    // O Subroutine name: O<some>, …\n    {\n      match: regex.concat(LETTER_BOUNDARY_RE, SUBROUTINE_NAMED_RE)\n    }, {\n      begin: SUBROUTINE_NAMED_RE,\n      'on:begin': LETTER_BOUNDARY_CALLBACK\n    },\n    // Checksum at end of line: *71, *199, …\n    {\n      match: /\\*\\s*\\d+\\s*$/\n    }]\n  }, {\n    scope: 'operator',\n    // N Line number: N1, N2, N1020, …\n    match: /^N\\s*\\d+/\n  }, {\n    scope: 'variable',\n    match: /-?#\\s*\\d+/\n  }, {\n    scope: 'property',\n    // Physical axes,\n    variants: [{\n      match: regex.concat(LETTER_BOUNDARY_RE, AXES_RE, NUMBER_RE)\n    }, {\n      begin: regex.concat(AXES_RE, NUMBER_RE),\n      'on:begin': LETTER_BOUNDARY_CALLBACK\n    }]\n  }, {\n    scope: 'params',\n    // Different types of parameters\n    variants: [{\n      match: regex.concat(LETTER_BOUNDARY_RE, PARAMETERS_RE, NUMBER_RE)\n    }, {\n      begin: regex.concat(PARAMETERS_RE, NUMBER_RE),\n      'on:begin': LETTER_BOUNDARY_CALLBACK\n    }]\n  }];\n  return {\n    name: 'G-code (ISO 6983)',\n    aliases: ['nc'],\n    // Some implementations (CNC controls) of G-code are interoperable with uppercase and lowercase letters seamlessly.\n    // However, most prefer all uppercase and uppercase is customary.\n    case_insensitive: true,\n    // TODO: post v12 with the use of look-behind this can be enabled\n    disableAutodetect: true,\n    keywords: GCODE_KEYWORDS,\n    contains: GCODE_CODE\n  };\n}\nexport { gcode as default };","map":{"version":3,"names":["gcode","hljs","regex","GCODE_KEYWORDS","$pattern","keyword","built_in","LETTER_BOUNDARY_RE","LETTER_BOUNDARY_CALLBACK","matchdata","response","index","charBeforeMatch","input","ignoreMatch","NUMBER_RE","GENERAL_MISC_FUNCTION_RE","TOOLS_RE","SUBROUTINE_RE","SUBROUTINE_NAMED_RE","AXES_RE","PARAMETERS_RE","GCODE_CODE","COMMENT","APOS_STRING_MODE","QUOTE_STRING_MODE","C_NUMBER_MODE","scope","variants","match","concat","begin","name","aliases","case_insensitive","disableAutodetect","keywords","contains","default"],"sources":["C:/Users/smart/Downloads/Final Project P20119/makeathon-2025/makeathon/node_modules/highlight.js/es/languages/gcode.js"],"sourcesContent":["/*\r\n Language: G-code (ISO 6983)\r\n Contributors: Adam Joseph Cook <adam.joseph.cook@gmail.com>\r\n Description: G-code syntax highlighter for Fanuc and other common CNC machine tool controls.\r\n Website: https://www.sis.se/api/document/preview/911952/\r\n Category: hardware\r\n */\r\n\r\nfunction gcode(hljs) {\r\n  const regex = hljs.regex;\r\n  const GCODE_KEYWORDS = {\r\n    $pattern: /[A-Z]+|%/,\r\n    keyword: [\r\n      // conditions\r\n      'THEN',\r\n      'ELSE',\r\n      'ENDIF',\r\n      'IF',\r\n\r\n      // controls\r\n      'GOTO',\r\n      'DO',\r\n      'WHILE',\r\n      'WH',\r\n      'END',\r\n      'CALL',\r\n\r\n      // scoping\r\n      'SUB',\r\n      'ENDSUB',\r\n\r\n      // comparisons\r\n      'EQ',\r\n      'NE',\r\n      'LT',\r\n      'GT',\r\n      'LE',\r\n      'GE',\r\n      'AND',\r\n      'OR',\r\n      'XOR',\r\n\r\n      // start/end of program\r\n      '%'\r\n    ],\r\n    built_in: [\r\n      'ATAN',\r\n      'ABS',\r\n      'ACOS',\r\n      'ASIN',\r\n      'COS',\r\n      'EXP',\r\n      'FIX',\r\n      'FUP',\r\n      'ROUND',\r\n      'LN',\r\n      'SIN',\r\n      'SQRT',\r\n      'TAN',\r\n      'EXISTS'\r\n    ]\r\n  };\r\n\r\n\r\n  // TODO: post v12 lets use look-behind, until then \\b and a callback filter will be used\r\n  // const LETTER_BOUNDARY_RE = /(?<![A-Z])/;\r\n  const LETTER_BOUNDARY_RE = /\\b/;\r\n\r\n  function LETTER_BOUNDARY_CALLBACK(matchdata, response) {\r\n    if (matchdata.index === 0) {\r\n      return;\r\n    }\r\n\r\n    const charBeforeMatch = matchdata.input[matchdata.index - 1];\r\n    if (charBeforeMatch >= '0' && charBeforeMatch <= '9') {\r\n      return;\r\n    }\r\n\r\n    if (charBeforeMatch === '_') {\r\n      return;\r\n    }\r\n\r\n    response.ignoreMatch();\r\n  }\r\n\r\n  const NUMBER_RE = /[+-]?((\\.\\d+)|(\\d+)(\\.\\d*)?)/;\r\n\r\n  const GENERAL_MISC_FUNCTION_RE = /[GM]\\s*\\d+(\\.\\d+)?/;\r\n  const TOOLS_RE = /T\\s*\\d+/;\r\n  const SUBROUTINE_RE = /O\\s*\\d+/;\r\n  const SUBROUTINE_NAMED_RE = /O<.+>/;\r\n  const AXES_RE = /[ABCUVWXYZ]\\s*/;\r\n  const PARAMETERS_RE = /[FHIJKPQRS]\\s*/;\r\n\r\n  const GCODE_CODE = [\r\n    // comments\r\n    hljs.COMMENT(/\\(/, /\\)/),\r\n    hljs.COMMENT(/;/, /$/),\r\n    hljs.APOS_STRING_MODE,\r\n    hljs.QUOTE_STRING_MODE,\r\n    hljs.C_NUMBER_MODE,\r\n\r\n    // gcodes\r\n    {\r\n      scope: 'title.function',\r\n      variants: [\r\n        // G General functions: G0, G5.1, G5.2, …\r\n        // M Misc functions: M0, M55.6, M199, …\r\n        { match: regex.concat(LETTER_BOUNDARY_RE, GENERAL_MISC_FUNCTION_RE) },\r\n        {\r\n          begin: GENERAL_MISC_FUNCTION_RE,\r\n          'on:begin': LETTER_BOUNDARY_CALLBACK\r\n        },\r\n        // T Tools\r\n        { match: regex.concat(LETTER_BOUNDARY_RE, TOOLS_RE), },\r\n        {\r\n          begin: TOOLS_RE,\r\n          'on:begin': LETTER_BOUNDARY_CALLBACK\r\n        }\r\n      ]\r\n    },\r\n\r\n    {\r\n      scope: 'symbol',\r\n      variants: [\r\n        // O Subroutine ID: O100, O110, …\r\n        { match: regex.concat(LETTER_BOUNDARY_RE, SUBROUTINE_RE) },\r\n        {\r\n          begin: SUBROUTINE_RE,\r\n          'on:begin': LETTER_BOUNDARY_CALLBACK\r\n        },\r\n        // O Subroutine name: O<some>, …\r\n        { match: regex.concat(LETTER_BOUNDARY_RE, SUBROUTINE_NAMED_RE) },\r\n        {\r\n          begin: SUBROUTINE_NAMED_RE,\r\n          'on:begin': LETTER_BOUNDARY_CALLBACK\r\n        },\r\n        // Checksum at end of line: *71, *199, …\r\n        { match: /\\*\\s*\\d+\\s*$/ }\r\n      ]\r\n    },\r\n\r\n    {\r\n      scope: 'operator', // N Line number: N1, N2, N1020, …\r\n      match: /^N\\s*\\d+/\r\n    },\r\n\r\n    {\r\n      scope: 'variable',\r\n      match: /-?#\\s*\\d+/\r\n    },\r\n\r\n    {\r\n      scope: 'property', // Physical axes,\r\n      variants: [\r\n        { match: regex.concat(LETTER_BOUNDARY_RE, AXES_RE, NUMBER_RE) },\r\n        {\r\n          begin: regex.concat(AXES_RE, NUMBER_RE),\r\n          'on:begin': LETTER_BOUNDARY_CALLBACK\r\n        },\r\n      ]\r\n    },\r\n\r\n    {\r\n      scope: 'params', // Different types of parameters\r\n      variants: [\r\n        { match: regex.concat(LETTER_BOUNDARY_RE, PARAMETERS_RE, NUMBER_RE) },\r\n        {\r\n          begin: regex.concat(PARAMETERS_RE, NUMBER_RE),\r\n          'on:begin': LETTER_BOUNDARY_CALLBACK\r\n        },\r\n      ]\r\n    },\r\n  ];\r\n\r\n  return {\r\n    name: 'G-code (ISO 6983)',\r\n    aliases: [ 'nc' ],\r\n    // Some implementations (CNC controls) of G-code are interoperable with uppercase and lowercase letters seamlessly.\r\n    // However, most prefer all uppercase and uppercase is customary.\r\n    case_insensitive: true,\r\n    // TODO: post v12 with the use of look-behind this can be enabled\r\n    disableAutodetect: true,\r\n    keywords: GCODE_KEYWORDS,\r\n    contains: GCODE_CODE\r\n  };\r\n}\r\n\r\nexport { gcode as default };\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}