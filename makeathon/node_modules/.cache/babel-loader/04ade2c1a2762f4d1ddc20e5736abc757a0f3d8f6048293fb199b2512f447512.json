{"ast":null,"code":"/**\r\n * @import {Info, Space} from 'property-information'\r\n */\n\n/**\r\n * @typedef Definition\r\n *   Definition of a schema.\r\n * @property {Record<string, string> | undefined} [attributes]\r\n *   Normalzed names to special attribute case.\r\n * @property {ReadonlyArray<string> | undefined} [mustUseProperty]\r\n *   Normalized names that must be set as properties.\r\n * @property {Record<string, number | null>} properties\r\n *   Property names to their types.\r\n * @property {Space | undefined} [space]\r\n *   Space.\r\n * @property {Transform} transform\r\n *   Transform a property name.\r\n */\n\n/**\r\n * @callback Transform\r\n *   Transform.\r\n * @param {Record<string, string>} attributes\r\n *   Attributes.\r\n * @param {string} property\r\n *   Property.\r\n * @returns {string}\r\n *   Attribute.\r\n */\n\nimport { normalize } from '../normalize.js';\nimport { DefinedInfo } from './defined-info.js';\nimport { Schema } from './schema.js';\n\n/**\r\n * @param {Definition} definition\r\n *   Definition.\r\n * @returns {Schema}\r\n *   Schema.\r\n */\nexport function create(definition) {\n  /** @type {Record<string, Info>} */\n  const properties = {};\n  /** @type {Record<string, string>} */\n  const normals = {};\n  for (const [property, value] of Object.entries(definition.properties)) {\n    const info = new DefinedInfo(property, definition.transform(definition.attributes || {}, property), value, definition.space);\n    if (definition.mustUseProperty && definition.mustUseProperty.includes(property)) {\n      info.mustUseProperty = true;\n    }\n    properties[property] = info;\n    normals[normalize(property)] = property;\n    normals[normalize(info.attribute)] = property;\n  }\n  return new Schema(properties, normals, definition.space);\n}","map":{"version":3,"names":["normalize","DefinedInfo","Schema","create","definition","properties","normals","property","value","Object","entries","info","transform","attributes","space","mustUseProperty","includes","attribute"],"sources":["C:/Users/smart/Downloads/Final Project P20119/makeathon-2025/makeathon/node_modules/property-information/lib/util/create.js"],"sourcesContent":["/**\r\n * @import {Info, Space} from 'property-information'\r\n */\r\n\r\n/**\r\n * @typedef Definition\r\n *   Definition of a schema.\r\n * @property {Record<string, string> | undefined} [attributes]\r\n *   Normalzed names to special attribute case.\r\n * @property {ReadonlyArray<string> | undefined} [mustUseProperty]\r\n *   Normalized names that must be set as properties.\r\n * @property {Record<string, number | null>} properties\r\n *   Property names to their types.\r\n * @property {Space | undefined} [space]\r\n *   Space.\r\n * @property {Transform} transform\r\n *   Transform a property name.\r\n */\r\n\r\n/**\r\n * @callback Transform\r\n *   Transform.\r\n * @param {Record<string, string>} attributes\r\n *   Attributes.\r\n * @param {string} property\r\n *   Property.\r\n * @returns {string}\r\n *   Attribute.\r\n */\r\n\r\nimport {normalize} from '../normalize.js'\r\nimport {DefinedInfo} from './defined-info.js'\r\nimport {Schema} from './schema.js'\r\n\r\n/**\r\n * @param {Definition} definition\r\n *   Definition.\r\n * @returns {Schema}\r\n *   Schema.\r\n */\r\nexport function create(definition) {\r\n  /** @type {Record<string, Info>} */\r\n  const properties = {}\r\n  /** @type {Record<string, string>} */\r\n  const normals = {}\r\n\r\n  for (const [property, value] of Object.entries(definition.properties)) {\r\n    const info = new DefinedInfo(\r\n      property,\r\n      definition.transform(definition.attributes || {}, property),\r\n      value,\r\n      definition.space\r\n    )\r\n\r\n    if (\r\n      definition.mustUseProperty &&\r\n      definition.mustUseProperty.includes(property)\r\n    ) {\r\n      info.mustUseProperty = true\r\n    }\r\n\r\n    properties[property] = info\r\n\r\n    normals[normalize(property)] = property\r\n    normals[normalize(info.attribute)] = property\r\n  }\r\n\r\n  return new Schema(properties, normals, definition.space)\r\n}\r\n"],"mappings":"AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAAQA,SAAS,QAAO,iBAAiB;AACzC,SAAQC,WAAW,QAAO,mBAAmB;AAC7C,SAAQC,MAAM,QAAO,aAAa;;AAElC;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,MAAMA,CAACC,UAAU,EAAE;EACjC;EACA,MAAMC,UAAU,GAAG,CAAC,CAAC;EACrB;EACA,MAAMC,OAAO,GAAG,CAAC,CAAC;EAElB,KAAK,MAAM,CAACC,QAAQ,EAAEC,KAAK,CAAC,IAAIC,MAAM,CAACC,OAAO,CAACN,UAAU,CAACC,UAAU,CAAC,EAAE;IACrE,MAAMM,IAAI,GAAG,IAAIV,WAAW,CAC1BM,QAAQ,EACRH,UAAU,CAACQ,SAAS,CAACR,UAAU,CAACS,UAAU,IAAI,CAAC,CAAC,EAAEN,QAAQ,CAAC,EAC3DC,KAAK,EACLJ,UAAU,CAACU,KACb,CAAC;IAED,IACEV,UAAU,CAACW,eAAe,IAC1BX,UAAU,CAACW,eAAe,CAACC,QAAQ,CAACT,QAAQ,CAAC,EAC7C;MACAI,IAAI,CAACI,eAAe,GAAG,IAAI;IAC7B;IAEAV,UAAU,CAACE,QAAQ,CAAC,GAAGI,IAAI;IAE3BL,OAAO,CAACN,SAAS,CAACO,QAAQ,CAAC,CAAC,GAAGA,QAAQ;IACvCD,OAAO,CAACN,SAAS,CAACW,IAAI,CAACM,SAAS,CAAC,CAAC,GAAGV,QAAQ;EAC/C;EAEA,OAAO,IAAIL,MAAM,CAACG,UAAU,EAAEC,OAAO,EAAEF,UAAU,CAACU,KAAK,CAAC;AAC1D","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}