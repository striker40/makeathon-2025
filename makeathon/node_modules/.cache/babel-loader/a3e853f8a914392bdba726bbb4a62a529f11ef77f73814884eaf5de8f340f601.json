{"ast":null,"code":"/*\r\nLanguage: Erlang\r\nDescription: Erlang is a general-purpose functional language, with strict evaluation, single assignment, and dynamic typing.\r\nAuthor: Nikolay Zakharov <nikolay.desh@gmail.com>, Dmitry Kovega <arhibot@gmail.com>\r\nWebsite: https://www.erlang.org\r\nCategory: functional\r\n*/\n\n/** @type LanguageFn */\nfunction erlang(hljs) {\n  const BASIC_ATOM_RE = '[a-z\\'][a-zA-Z0-9_\\']*';\n  const FUNCTION_NAME_RE = '(' + BASIC_ATOM_RE + ':' + BASIC_ATOM_RE + '|' + BASIC_ATOM_RE + ')';\n  const ERLANG_RESERVED = {\n    keyword: 'after and andalso|10 band begin bnot bor bsl bzr bxor case catch cond div end fun if ' + 'let not of orelse|10 query receive rem try when xor maybe else',\n    literal: 'false true'\n  };\n  const COMMENT = hljs.COMMENT('%', '$');\n  const NUMBER = {\n    className: 'number',\n    begin: '\\\\b(\\\\d+(_\\\\d+)*#[a-fA-F0-9]+(_[a-fA-F0-9]+)*|\\\\d+(_\\\\d+)*(\\\\.\\\\d+(_\\\\d+)*)?([eE][-+]?\\\\d+)?)',\n    relevance: 0\n  };\n  const NAMED_FUN = {\n    begin: 'fun\\\\s+' + BASIC_ATOM_RE + '/\\\\d+'\n  };\n  const FUNCTION_CALL = {\n    begin: FUNCTION_NAME_RE + '\\\\(',\n    end: '\\\\)',\n    returnBegin: true,\n    relevance: 0,\n    contains: [{\n      begin: FUNCTION_NAME_RE,\n      relevance: 0\n    }, {\n      begin: '\\\\(',\n      end: '\\\\)',\n      endsWithParent: true,\n      returnEnd: true,\n      relevance: 0\n      // \"contains\" defined later\n    }]\n  };\n  const TUPLE = {\n    begin: /\\{/,\n    end: /\\}/,\n    relevance: 0\n    // \"contains\" defined later\n  };\n  const VAR1 = {\n    begin: '\\\\b_([A-Z][A-Za-z0-9_]*)?',\n    relevance: 0\n  };\n  const VAR2 = {\n    begin: '[A-Z][a-zA-Z0-9_]*',\n    relevance: 0\n  };\n  const RECORD_ACCESS = {\n    begin: '#' + hljs.UNDERSCORE_IDENT_RE,\n    relevance: 0,\n    returnBegin: true,\n    contains: [{\n      begin: '#' + hljs.UNDERSCORE_IDENT_RE,\n      relevance: 0\n    }, {\n      begin: /\\{/,\n      end: /\\}/,\n      relevance: 0\n      // \"contains\" defined later\n    }]\n  };\n  const CHAR_LITERAL = {\n    scope: 'string',\n    match: /\\$(\\\\([^0-9]|[0-9]{1,3}|)|.)/\n  };\n  const TRIPLE_QUOTE = {\n    scope: 'string',\n    match: /\"\"\"(\"*)(?!\")[\\s\\S]*?\"\"\"\\1/\n  };\n  const SIGIL = {\n    scope: 'string',\n    contains: [hljs.BACKSLASH_ESCAPE],\n    variants: [{\n      match: /~\\w?\"\"\"(\"*)(?!\")[\\s\\S]*?\"\"\"\\1/\n    }, {\n      begin: /~\\w?\\(/,\n      end: /\\)/\n    }, {\n      begin: /~\\w?\\[/,\n      end: /\\]/\n    }, {\n      begin: /~\\w?{/,\n      end: /}/\n    }, {\n      begin: /~\\w?</,\n      end: />/\n    }, {\n      begin: /~\\w?\\//,\n      end: /\\//\n    }, {\n      begin: /~\\w?\\|/,\n      end: /\\|/\n    }, {\n      begin: /~\\w?'/,\n      end: /'/\n    }, {\n      begin: /~\\w?\"/,\n      end: /\"/\n    }, {\n      begin: /~\\w?`/,\n      end: /`/\n    }, {\n      begin: /~\\w?#/,\n      end: /#/\n    }]\n  };\n  const BLOCK_STATEMENTS = {\n    beginKeywords: 'fun receive if try case maybe',\n    end: 'end',\n    keywords: ERLANG_RESERVED\n  };\n  BLOCK_STATEMENTS.contains = [COMMENT, NAMED_FUN, hljs.inherit(hljs.APOS_STRING_MODE, {\n    className: ''\n  }), BLOCK_STATEMENTS, FUNCTION_CALL, SIGIL, TRIPLE_QUOTE, hljs.QUOTE_STRING_MODE, NUMBER, TUPLE, VAR1, VAR2, RECORD_ACCESS, CHAR_LITERAL];\n  const BASIC_MODES = [COMMENT, NAMED_FUN, BLOCK_STATEMENTS, FUNCTION_CALL, SIGIL, TRIPLE_QUOTE, hljs.QUOTE_STRING_MODE, NUMBER, TUPLE, VAR1, VAR2, RECORD_ACCESS, CHAR_LITERAL];\n  FUNCTION_CALL.contains[1].contains = BASIC_MODES;\n  TUPLE.contains = BASIC_MODES;\n  RECORD_ACCESS.contains[1].contains = BASIC_MODES;\n  const DIRECTIVES = [\"-module\", \"-record\", \"-undef\", \"-export\", \"-ifdef\", \"-ifndef\", \"-author\", \"-copyright\", \"-doc\", \"-moduledoc\", \"-vsn\", \"-import\", \"-include\", \"-include_lib\", \"-compile\", \"-define\", \"-else\", \"-endif\", \"-file\", \"-behaviour\", \"-behavior\", \"-spec\", \"-on_load\", \"-nifs\"];\n  const PARAMS = {\n    className: 'params',\n    begin: '\\\\(',\n    end: '\\\\)',\n    contains: BASIC_MODES\n  };\n  return {\n    name: 'Erlang',\n    aliases: ['erl'],\n    keywords: ERLANG_RESERVED,\n    illegal: '(</|\\\\*=|\\\\+=|-=|/\\\\*|\\\\*/|\\\\(\\\\*|\\\\*\\\\))',\n    contains: [{\n      className: 'function',\n      begin: '^' + BASIC_ATOM_RE + '\\\\s*\\\\(',\n      end: '->',\n      returnBegin: true,\n      illegal: '\\\\(|#|//|/\\\\*|\\\\\\\\|:|;',\n      contains: [PARAMS, hljs.inherit(hljs.TITLE_MODE, {\n        begin: BASIC_ATOM_RE\n      })],\n      starts: {\n        end: ';|\\\\.',\n        keywords: ERLANG_RESERVED,\n        contains: BASIC_MODES\n      }\n    }, COMMENT, {\n      begin: '^-',\n      end: '\\\\.',\n      relevance: 0,\n      excludeEnd: true,\n      returnBegin: true,\n      keywords: {\n        $pattern: '-' + hljs.IDENT_RE,\n        keyword: DIRECTIVES.map(x => `${x}|1.5`).join(\" \")\n      },\n      contains: [PARAMS, SIGIL, TRIPLE_QUOTE, hljs.QUOTE_STRING_MODE]\n    }, NUMBER, SIGIL, TRIPLE_QUOTE, hljs.QUOTE_STRING_MODE, RECORD_ACCESS, VAR1, VAR2, TUPLE, CHAR_LITERAL, {\n      begin: /\\.$/\n    } // relevance booster\n    ]\n  };\n}\nexport { erlang as default };","map":{"version":3,"names":["erlang","hljs","BASIC_ATOM_RE","FUNCTION_NAME_RE","ERLANG_RESERVED","keyword","literal","COMMENT","NUMBER","className","begin","relevance","NAMED_FUN","FUNCTION_CALL","end","returnBegin","contains","endsWithParent","returnEnd","TUPLE","VAR1","VAR2","RECORD_ACCESS","UNDERSCORE_IDENT_RE","CHAR_LITERAL","scope","match","TRIPLE_QUOTE","SIGIL","BACKSLASH_ESCAPE","variants","BLOCK_STATEMENTS","beginKeywords","keywords","inherit","APOS_STRING_MODE","QUOTE_STRING_MODE","BASIC_MODES","DIRECTIVES","PARAMS","name","aliases","illegal","TITLE_MODE","starts","excludeEnd","$pattern","IDENT_RE","map","x","join","default"],"sources":["C:/Users/smart/Downloads/Final Project P20119/makeathon-2025/makeathon/node_modules/highlight.js/es/languages/erlang.js"],"sourcesContent":["/*\r\nLanguage: Erlang\r\nDescription: Erlang is a general-purpose functional language, with strict evaluation, single assignment, and dynamic typing.\r\nAuthor: Nikolay Zakharov <nikolay.desh@gmail.com>, Dmitry Kovega <arhibot@gmail.com>\r\nWebsite: https://www.erlang.org\r\nCategory: functional\r\n*/\r\n\r\n/** @type LanguageFn */\r\nfunction erlang(hljs) {\r\n  const BASIC_ATOM_RE = '[a-z\\'][a-zA-Z0-9_\\']*';\r\n  const FUNCTION_NAME_RE = '(' + BASIC_ATOM_RE + ':' + BASIC_ATOM_RE + '|' + BASIC_ATOM_RE + ')';\r\n  const ERLANG_RESERVED = {\r\n    keyword:\r\n      'after and andalso|10 band begin bnot bor bsl bzr bxor case catch cond div end fun if '\r\n      + 'let not of orelse|10 query receive rem try when xor maybe else',\r\n    literal:\r\n      'false true'\r\n  };\r\n\r\n  const COMMENT = hljs.COMMENT('%', '$');\r\n  const NUMBER = {\r\n    className: 'number',\r\n    begin: '\\\\b(\\\\d+(_\\\\d+)*#[a-fA-F0-9]+(_[a-fA-F0-9]+)*|\\\\d+(_\\\\d+)*(\\\\.\\\\d+(_\\\\d+)*)?([eE][-+]?\\\\d+)?)',\r\n    relevance: 0\r\n  };\r\n  const NAMED_FUN = { begin: 'fun\\\\s+' + BASIC_ATOM_RE + '/\\\\d+' };\r\n  const FUNCTION_CALL = {\r\n    begin: FUNCTION_NAME_RE + '\\\\(',\r\n    end: '\\\\)',\r\n    returnBegin: true,\r\n    relevance: 0,\r\n    contains: [\r\n      {\r\n        begin: FUNCTION_NAME_RE,\r\n        relevance: 0\r\n      },\r\n      {\r\n        begin: '\\\\(',\r\n        end: '\\\\)',\r\n        endsWithParent: true,\r\n        returnEnd: true,\r\n        relevance: 0\r\n        // \"contains\" defined later\r\n      }\r\n    ]\r\n  };\r\n  const TUPLE = {\r\n    begin: /\\{/,\r\n    end: /\\}/,\r\n    relevance: 0\r\n    // \"contains\" defined later\r\n  };\r\n  const VAR1 = {\r\n    begin: '\\\\b_([A-Z][A-Za-z0-9_]*)?',\r\n    relevance: 0\r\n  };\r\n  const VAR2 = {\r\n    begin: '[A-Z][a-zA-Z0-9_]*',\r\n    relevance: 0\r\n  };\r\n  const RECORD_ACCESS = {\r\n    begin: '#' + hljs.UNDERSCORE_IDENT_RE,\r\n    relevance: 0,\r\n    returnBegin: true,\r\n    contains: [\r\n      {\r\n        begin: '#' + hljs.UNDERSCORE_IDENT_RE,\r\n        relevance: 0\r\n      },\r\n      {\r\n        begin: /\\{/,\r\n        end: /\\}/,\r\n        relevance: 0\r\n        // \"contains\" defined later\r\n      }\r\n    ]\r\n  };\r\n  const CHAR_LITERAL = {\r\n    scope: 'string',\r\n    match: /\\$(\\\\([^0-9]|[0-9]{1,3}|)|.)/,\r\n  };\r\n  const TRIPLE_QUOTE = {\r\n    scope: 'string',\r\n    match: /\"\"\"(\"*)(?!\")[\\s\\S]*?\"\"\"\\1/,\r\n  };\r\n\r\n  const SIGIL = {\r\n    scope: 'string',\r\n    contains: [ hljs.BACKSLASH_ESCAPE ],\r\n    variants: [\r\n      {match: /~\\w?\"\"\"(\"*)(?!\")[\\s\\S]*?\"\"\"\\1/},\r\n      {begin: /~\\w?\\(/, end: /\\)/},\r\n      {begin: /~\\w?\\[/, end: /\\]/},\r\n      {begin: /~\\w?{/, end: /}/},\r\n      {begin: /~\\w?</, end: />/},\r\n      {begin: /~\\w?\\//, end: /\\//},\r\n      {begin: /~\\w?\\|/, end: /\\|/},\r\n      {begin: /~\\w?'/, end: /'/},\r\n      {begin: /~\\w?\"/, end: /\"/},\r\n      {begin: /~\\w?`/, end: /`/},\r\n      {begin: /~\\w?#/, end: /#/},\r\n    ],\r\n  };\r\n\r\n  const BLOCK_STATEMENTS = {\r\n    beginKeywords: 'fun receive if try case maybe',\r\n    end: 'end',\r\n    keywords: ERLANG_RESERVED\r\n  };\r\n  BLOCK_STATEMENTS.contains = [\r\n    COMMENT,\r\n    NAMED_FUN,\r\n    hljs.inherit(hljs.APOS_STRING_MODE, { className: '' }),\r\n    BLOCK_STATEMENTS,\r\n    FUNCTION_CALL,\r\n    SIGIL,\r\n    TRIPLE_QUOTE,\r\n    hljs.QUOTE_STRING_MODE,\r\n    NUMBER,\r\n    TUPLE,\r\n    VAR1,\r\n    VAR2,\r\n    RECORD_ACCESS,\r\n    CHAR_LITERAL\r\n  ];\r\n\r\n  const BASIC_MODES = [\r\n    COMMENT,\r\n    NAMED_FUN,\r\n    BLOCK_STATEMENTS,\r\n    FUNCTION_CALL,\r\n    SIGIL,\r\n    TRIPLE_QUOTE,\r\n    hljs.QUOTE_STRING_MODE,\r\n    NUMBER,\r\n    TUPLE,\r\n    VAR1,\r\n    VAR2,\r\n    RECORD_ACCESS,\r\n    CHAR_LITERAL\r\n  ];\r\n  FUNCTION_CALL.contains[1].contains = BASIC_MODES;\r\n  TUPLE.contains = BASIC_MODES;\r\n  RECORD_ACCESS.contains[1].contains = BASIC_MODES;\r\n\r\n  const DIRECTIVES = [\r\n    \"-module\",\r\n    \"-record\",\r\n    \"-undef\",\r\n    \"-export\",\r\n    \"-ifdef\",\r\n    \"-ifndef\",\r\n    \"-author\",\r\n    \"-copyright\",\r\n    \"-doc\",\r\n    \"-moduledoc\",\r\n    \"-vsn\",\r\n    \"-import\",\r\n    \"-include\",\r\n    \"-include_lib\",\r\n    \"-compile\",\r\n    \"-define\",\r\n    \"-else\",\r\n    \"-endif\",\r\n    \"-file\",\r\n    \"-behaviour\",\r\n    \"-behavior\",\r\n    \"-spec\",\r\n    \"-on_load\",\r\n    \"-nifs\",\r\n  ];\r\n\r\n  const PARAMS = {\r\n    className: 'params',\r\n    begin: '\\\\(',\r\n    end: '\\\\)',\r\n    contains: BASIC_MODES\r\n  };\r\n\r\n  return {\r\n    name: 'Erlang',\r\n    aliases: [ 'erl' ],\r\n    keywords: ERLANG_RESERVED,\r\n    illegal: '(</|\\\\*=|\\\\+=|-=|/\\\\*|\\\\*/|\\\\(\\\\*|\\\\*\\\\))',\r\n    contains: [\r\n      {\r\n        className: 'function',\r\n        begin: '^' + BASIC_ATOM_RE + '\\\\s*\\\\(',\r\n        end: '->',\r\n        returnBegin: true,\r\n        illegal: '\\\\(|#|//|/\\\\*|\\\\\\\\|:|;',\r\n        contains: [\r\n          PARAMS,\r\n          hljs.inherit(hljs.TITLE_MODE, { begin: BASIC_ATOM_RE })\r\n        ],\r\n        starts: {\r\n          end: ';|\\\\.',\r\n          keywords: ERLANG_RESERVED,\r\n          contains: BASIC_MODES\r\n        }\r\n      },\r\n      COMMENT,\r\n      {\r\n        begin: '^-',\r\n        end: '\\\\.',\r\n        relevance: 0,\r\n        excludeEnd: true,\r\n        returnBegin: true,\r\n        keywords: {\r\n          $pattern: '-' + hljs.IDENT_RE,\r\n          keyword: DIRECTIVES.map(x => `${x}|1.5`).join(\" \")\r\n        },\r\n        contains: [\r\n          PARAMS,\r\n          SIGIL,\r\n          TRIPLE_QUOTE,\r\n          hljs.QUOTE_STRING_MODE\r\n        ]\r\n      },\r\n      NUMBER,\r\n      SIGIL,\r\n      TRIPLE_QUOTE,\r\n      hljs.QUOTE_STRING_MODE,\r\n      RECORD_ACCESS,\r\n      VAR1,\r\n      VAR2,\r\n      TUPLE,\r\n      CHAR_LITERAL,\r\n      { begin: /\\.$/ } // relevance booster\r\n    ]\r\n  };\r\n}\r\n\r\nexport { erlang as default };\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}